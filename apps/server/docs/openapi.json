{
  "components": {
    "schemas": {
      "Download": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": ["http://localhost:9999/api/schemas/Download.json"],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "createdAt": { "format": "date-time", "type": "string" },
          "downloadSpeed": { "format": "int64", "type": "integer" },
          "downloadedBytes": { "format": "int64", "type": "integer" },
          "error": { "type": "string" },
          "finishedAt": { "format": "date-time", "type": "string" },
          "id": { "format": "int64", "type": "integer" },
          "name": { "type": "string" },
          "partCount": { "format": "int64", "type": "integer" },
          "partLength": { "format": "int64", "type": "integer" },
          "parts": {
            "items": { "$ref": "#/components/schemas/DownloadPart" },
            "type": "array"
          },
          "progress": { "format": "double", "type": "number" },
          "queueNumber": { "format": "int64", "type": "integer" },
          "savePath": { "type": "string" },
          "startedAt": { "format": "date-time", "type": "string" },
          "status": {
            "enum": ["paused", "downloading", "completed", "error", "metadata"],
            "type": "string"
          },
          "timeActive": { "format": "int64", "type": "integer" },
          "totalSize": { "format": "int64", "type": "integer" },
          "url": { "type": "string" }
        },
        "required": [
          "id",
          "createdAt",
          "startedAt",
          "timeActive",
          "finishedAt",
          "status",
          "name",
          "savePath",
          "partCount",
          "partLength",
          "totalSize",
          "downloadedBytes",
          "downloadSpeed",
          "progress",
          "parts",
          "url",
          "queueNumber",
          "error"
        ],
        "type": "object"
      },
      "DownloadActionReqBody": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "http://localhost:9999/api/schemas/DownloadActionReqBody.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "ids": {
            "items": { "format": "int64", "type": "integer" },
            "type": "array"
          }
        },
        "required": ["ids"],
        "type": "object"
      },
      "DownloadActionResBody": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "http://localhost:9999/api/schemas/DownloadActionResBody.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "success": { "type": "boolean" }
        },
        "required": ["success"],
        "type": "object"
      },
      "DownloadMeta": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": ["http://localhost:9999/api/schemas/DownloadMeta.json"],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "fileName": { "type": "string" },
          "fileType": { "type": "string" },
          "isRangeAllowed": { "type": "boolean" },
          "totalSize": { "format": "int64", "type": "integer" },
          "url": { "type": "string" }
        },
        "required": [
          "totalSize",
          "url",
          "fileName",
          "fileType",
          "isRangeAllowed"
        ],
        "type": "object"
      },
      "DownloadPart": {
        "additionalProperties": false,
        "properties": {
          "createdAt": { "format": "date-time", "type": "string" },
          "downloadedBytes": { "format": "int64", "type": "integer" },
          "endByteIndex": { "format": "int64", "type": "integer" },
          "finishedAt": { "format": "date-time", "type": "string" },
          "partIndex": { "format": "int64", "type": "integer" },
          "partLength": { "format": "int64", "type": "integer" },
          "progress": { "format": "double", "type": "number" },
          "startByteIndex": { "format": "int64", "type": "integer" },
          "startedAt": { "format": "date-time", "type": "string" },
          "status": { "type": "string" },
          "timeActive": { "format": "int64", "type": "integer" }
        },
        "required": [
          "createdAt",
          "startedAt",
          "timeActive",
          "finishedAt",
          "status",
          "partIndex",
          "startByteIndex",
          "endByteIndex",
          "partLength",
          "downloadedBytes",
          "progress"
        ],
        "type": "object"
      },
      "DownloadReqBody": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "http://localhost:9999/api/schemas/DownloadReqBody.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "addTopOfQueue": { "type": "boolean" },
          "category": { "type": "string" },
          "contentLayout": {
            "enum": ["Original", "Create subfolder", "Don't create subfolder"],
            "type": "string"
          },
          "incompleteSavePath": { "type": "string" },
          "isIncompleteSavePathEnabled": { "type": "boolean" },
          "savePath": { "type": "string" },
          "startDownload": { "type": "boolean" },
          "tags": { "items": { "type": "string" }, "type": "array" },
          "url": { "minLength": 1, "type": "string" }
        },
        "required": [
          "url",
          "category",
          "savePath",
          "isIncompleteSavePathEnabled",
          "incompleteSavePath",
          "contentLayout",
          "tags",
          "startDownload",
          "addTopOfQueue"
        ],
        "type": "object"
      },
      "DownloadTorrentReqBody": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "http://localhost:9999/api/schemas/DownloadTorrentReqBody.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "addTopOfQueue": { "type": "boolean" },
          "category": { "type": "string" },
          "contentLayout": {
            "enum": ["Original", "Create subfolder", "Don't create subfolder"],
            "type": "string"
          },
          "downloadSequentially": { "type": "boolean" },
          "files": {
            "items": { "$ref": "#/components/schemas/TorrentFileFlatTreeNode" },
            "type": "array"
          },
          "incompleteSavePath": { "type": "string" },
          "isIncompleteSavePathEnabled": { "type": "boolean" },
          "magnet": { "type": "string" },
          "savePath": { "type": "string" },
          "skipHashCheck": { "type": "boolean" },
          "startTorrent": { "type": "boolean" },
          "tags": { "items": { "type": "string" }, "type": "array" },
          "torrentFile": {}
        },
        "required": [
          "magnet",
          "savePath",
          "isIncompleteSavePathEnabled",
          "startTorrent",
          "addTopOfQueue",
          "downloadSequentially",
          "skipHashCheck",
          "contentLayout",
          "files"
        ],
        "type": "object"
      },
      "ErrorDetail": {
        "additionalProperties": false,
        "properties": {
          "location": {
            "description": "Where the error occurred, e.g. 'body.items[3].tags' or 'path.thing-id'",
            "type": "string"
          },
          "message": { "description": "Error message text", "type": "string" },
          "value": { "description": "The value at the given location" }
        },
        "type": "object"
      },
      "ErrorModel": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": ["http://localhost:9999/api/schemas/ErrorModel.json"],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "detail": {
            "description": "A human-readable explanation specific to this occurrence of the problem.",
            "examples": ["Property foo is required but is missing."],
            "type": "string"
          },
          "errors": {
            "description": "Optional list of individual error details",
            "items": { "$ref": "#/components/schemas/ErrorDetail" },
            "type": "array"
          },
          "instance": {
            "description": "A URI reference that identifies the specific occurrence of the problem.",
            "examples": ["https://example.com/error-log/abc123"],
            "format": "uri",
            "type": "string"
          },
          "status": {
            "description": "HTTP status code",
            "examples": [400],
            "format": "int64",
            "type": "integer"
          },
          "title": {
            "description": "A short, human-readable summary of the problem type. This value should not change between occurrences of the error.",
            "examples": ["Bad Request"],
            "type": "string"
          },
          "type": {
            "default": "about:blank",
            "description": "A URI reference to human-readable documentation for the error.",
            "examples": ["https://example.com/errors/example"],
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetDownloadMetaReqBody": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "http://localhost:9999/api/schemas/GetDownloadMetaReqBody.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "url": { "minLength": 1, "type": "string" }
        },
        "required": ["url"],
        "type": "object"
      },
      "GetMetaWithMagnetReqBody": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "http://localhost:9999/api/schemas/GetMetaWithMagnetReqBody.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "magnet": { "minLength": 1, "type": "string" }
        },
        "required": ["magnet"],
        "type": "object"
      },
      "GetTorrentsResBody": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "http://localhost:9999/api/schemas/GetTorrentsResBody.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "torrents": {
            "items": { "$ref": "#/components/schemas/Torrent" },
            "type": "array"
          }
        },
        "required": ["torrents"],
        "type": "object"
      },
      "Peer": {
        "additionalProperties": false,
        "properties": { "url": { "type": "string" } },
        "required": ["url"],
        "type": "object"
      },
      "PieceProgress": {
        "additionalProperties": false,
        "properties": {
          "downloadedByteCount": { "format": "int64", "type": "integer" },
          "index": { "format": "int64", "type": "integer" },
          "length": { "format": "int64", "type": "integer" }
        },
        "required": ["index", "downloadedByteCount", "length"],
        "type": "object"
      },
      "Torrent": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": ["http://localhost:9999/api/schemas/Torrent.json"],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "amountLeft": { "format": "int64", "type": "integer" },
          "availability": { "format": "float", "type": "number" },
          "category": { "type": "string" },
          "comment": { "type": "string" },
          "createdAt": { "format": "int64", "type": "integer" },
          "downloadSpeed": { "format": "float", "type": "number" },
          "downloaded": { "format": "int64", "type": "integer" },
          "eta": { "format": "int64", "type": "integer" },
          "files": {
            "items": { "$ref": "#/components/schemas/TorrentFileTreeNode" },
            "type": "array"
          },
          "infohash": { "type": "string" },
          "magnet": { "type": "string" },
          "name": { "type": "string" },
          "peerCount": { "format": "int64", "type": "integer" },
          "peers": {
            "items": { "$ref": "#/components/schemas/Peer" },
            "type": "array"
          },
          "pieceProgress": {
            "items": { "$ref": "#/components/schemas/PieceProgress" },
            "type": "array"
          },
          "progress": { "format": "float", "type": "number" },
          "queueNumber": { "format": "int64", "type": "integer" },
          "ratio": { "format": "float", "type": "number" },
          "savePath": { "type": "string" },
          "seeds": { "format": "int64", "type": "integer" },
          "sizeOfWanted": { "format": "int64", "type": "integer" },
          "startedAt": { "format": "int64", "type": "integer" },
          "status": {
            "enum": [
              "paused",
              "downloading",
              "completed",
              "seeding",
              "metadata"
            ],
            "type": "string"
          },
          "tags": { "items": { "type": "string" }, "type": "array" },
          "timeActive": { "format": "int64", "type": "integer" },
          "totalSize": { "format": "int64", "type": "integer" },
          "trackers": {
            "items": { "$ref": "#/components/schemas/Tracker" },
            "type": "array"
          },
          "uploadSpeed": { "format": "float", "type": "number" },
          "uploaded": { "format": "int64", "type": "integer" }
        },
        "required": [
          "name",
          "infohash",
          "queueNumber",
          "files",
          "totalSize",
          "sizeOfWanted",
          "amountLeft",
          "uploaded",
          "downloaded",
          "magnet",
          "status",
          "pieceProgress",
          "peers",
          "progress",
          "peerCount",
          "eta",
          "category",
          "savePath",
          "tags",
          "trackers",
          "createdAt",
          "startedAt",
          "timeActive",
          "availability",
          "ratio",
          "seeds",
          "downloadSpeed",
          "uploadSpeed",
          "comment"
        ],
        "type": "object"
      },
      "TorrentActionReqBody": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "http://localhost:9999/api/schemas/TorrentActionReqBody.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "infoHashes": {
            "description": "Hashes of torrents",
            "examples": [["2b66980093bc11806fab50cb3cb41835b95a0362"]],
            "items": { "type": "string" },
            "maxLength": 30,
            "type": "array"
          }
        },
        "required": ["infoHashes"],
        "type": "object"
      },
      "TorrentActionResBody": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "http://localhost:9999/api/schemas/TorrentActionResBody.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "result": { "type": "boolean" }
        },
        "required": ["result"],
        "type": "object"
      },
      "TorrentFileFlatTreeNode": {
        "additionalProperties": false,
        "properties": {
          "name": { "type": "string" },
          "path": { "type": "string" },
          "priority": {
            "enum": ["none", "low", "normal", "high", "maximum"],
            "type": "string"
          }
        },
        "required": ["name", "priority", "path"],
        "type": "object"
      },
      "TorrentFileTreeNode": {
        "additionalProperties": false,
        "properties": {
          "children": {
            "items": { "$ref": "#/components/schemas/TorrentFileTreeNode" },
            "type": "array"
          },
          "length": { "format": "int64", "type": "integer" },
          "name": { "type": "string" },
          "path": { "type": "string" },
          "priority": {
            "enum": ["none", "low", "normal", "high", "maximum"],
            "type": "string"
          }
        },
        "required": ["length", "name", "priority", "path", "children"],
        "type": "object"
      },
      "TorrentMeta": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": ["http://localhost:9999/api/schemas/TorrentMeta.json"],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "files": {
            "items": { "$ref": "#/components/schemas/TorrentFileTreeNode" },
            "type": "array"
          },
          "infohash": { "type": "string" },
          "magnet": { "type": "string" },
          "name": { "type": "string" },
          "totalSize": { "format": "int64", "type": "integer" }
        },
        "required": ["totalSize", "files", "name", "infohash", "magnet"],
        "type": "object"
      },
      "TorrentsTotalSpeedData": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "http://localhost:9999/api/schemas/TorrentsTotalSpeedData.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "downloadSpeed": { "format": "float", "type": "number" },
          "time": { "type": "string" },
          "uploadSpeed": { "format": "float", "type": "number" }
        },
        "required": ["downloadSpeed", "uploadSpeed", "time"],
        "type": "object"
      },
      "Tracker": {
        "additionalProperties": false,
        "properties": {
          "interval": { "format": "int64", "type": "integer" },
          "peers": {
            "items": { "$ref": "#/components/schemas/Peer" },
            "type": "array"
          },
          "tier": { "format": "int64", "type": "integer" },
          "url": { "type": "string" }
        },
        "required": ["interval", "url", "peers", "tier"],
        "type": "object"
      }
    }
  },
  "info": { "title": "Downite API", "version": "0.0.1" },
  "openapi": "3.1.0",
  "paths": {
    "/download": {
      "get": {
        "operationId": "get-downloads",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/Download" },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Get all downloads"
      },
      "post": {
        "operationId": "download",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DownloadReqBody" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Download" }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Download with url"
      }
    },
    "/download/delete": {
      "post": {
        "operationId": "delete-download-with-files",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DownloadActionReqBody" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DownloadActionResBody"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Delete download with files"
      }
    },
    "/download/meta": {
      "post": {
        "operationId": "get-download-meta",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetDownloadMetaReqBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DownloadMeta" }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Get meta data of download"
      }
    },
    "/download/pause": {
      "post": {
        "operationId": "pause-download",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DownloadActionReqBody" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DownloadActionResBody"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Pause download"
      }
    },
    "/download/remove": {
      "post": {
        "operationId": "remove-download",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DownloadActionReqBody" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DownloadActionResBody"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Remove download"
      }
    },
    "/download/resume": {
      "post": {
        "operationId": "resume-download",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DownloadActionReqBody" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DownloadActionResBody"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Resume download"
      }
    },
    "/download/{id}": {
      "get": {
        "operationId": "get-download",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Download" }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Get download"
      }
    },
    "/meta/file": {
      "post": {
        "operationId": "get-torrent-meta-info-with-file",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "encoding": {
                "TorrentFile": { "contentType": "application/octet-stream" }
              },
              "schema": { "required": [""], "type": "object" }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TorrentMeta" }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Get torrent meta info with file"
      }
    },
    "/meta/magnet": {
      "post": {
        "operationId": "get-torrent-meta-info-with-magnet",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetMetaWithMagnetReqBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TorrentMeta" }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Get torrent meta info with magnet"
      }
    },
    "/torrent": {
      "get": {
        "operationId": "get-all-torrents",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetTorrentsResBody" }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Get all torrents"
      },
      "post": {
        "operationId": "download-torrent",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "encoding": {
                "torrentFile": { "contentType": "application/x-bittorrent" }
              },
              "schema": {
                "$ref": "#/components/schemas/DownloadTorrentReqBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Torrent" }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Download torrent"
      }
    },
    "/torrent/delete": {
      "post": {
        "operationId": "delete-torrent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TorrentActionReqBody" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TorrentActionResBody"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Delete torrent"
      }
    },
    "/torrent/pause": {
      "post": {
        "operationId": "pause-torrent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TorrentActionReqBody" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TorrentActionResBody"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Pause torrent"
      }
    },
    "/torrent/remove": {
      "post": {
        "operationId": "remove-torrent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TorrentActionReqBody" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TorrentActionResBody"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Remove torrent"
      }
    },
    "/torrent/resume": {
      "post": {
        "operationId": "resume-torrent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TorrentActionReqBody" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TorrentActionResBody"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Resume torrent"
      }
    },
    "/torrent/speed": {
      "get": {
        "operationId": "get-torrents-total-speed",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TorrentsTotalSpeedData"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Get torrents total speed"
      }
    },
    "/torrent/{infohash}": {
      "get": {
        "operationId": "get-torrent",
        "parameters": [
          {
            "description": "Infohash of the torrent",
            "example": "2b66980093bc11806fab50cb3cb41835b95a0362",
            "in": "path",
            "name": "infohash",
            "required": true,
            "schema": {
              "description": "Infohash of the torrent",
              "examples": ["2b66980093bc11806fab50cb3cb41835b95a0362"],
              "maxLength": 40,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Torrent" }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Get torrent"
      }
    }
  },
  "servers": [{ "url": "http://localhost:9999/api" }]
}
