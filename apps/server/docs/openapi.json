{
  "components": {
    "schemas": {
      "DownloadTorrentReqBody": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "http://localhost:9999/api/schemas/DownloadTorrentReqBody.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "addTopOfQueue": { "type": "boolean" },
          "category": { "type": "string" },
          "contentLayout": { "type": "string" },
          "downloadSequentially": { "type": "boolean" },
          "files": {
            "items": { "$ref": "#/components/schemas/Item" },
            "type": "array"
          },
          "incompleteSavePath": { "type": "string" },
          "isIncompleteSavePathEnabled": { "type": "boolean" },
          "magnet": { "type": "string" },
          "savePath": { "type": "string" },
          "skipHashCheck": { "type": "boolean" },
          "startTorrent": { "type": "boolean" },
          "tags": { "items": { "type": "string" }, "type": "array" },
          "torrentFile": { "type": "string" }
        },
        "required": [
          "savePath",
          "isIncompleteSavePathEnabled",
          "startTorrent",
          "addTopOfQueue",
          "downloadSequentially",
          "skipHashCheck",
          "contentLayout",
          "files"
        ],
        "type": "object"
      },
      "ErrorDetail": {
        "additionalProperties": false,
        "properties": {
          "location": {
            "description": "Where the error occurred, e.g. 'body.items[3].tags' or 'path.thing-id'",
            "type": "string"
          },
          "message": { "description": "Error message text", "type": "string" },
          "value": { "description": "The value at the given location" }
        },
        "type": "object"
      },
      "ErrorModel": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": ["http://localhost:9999/api/schemas/ErrorModel.json"],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "detail": {
            "description": "A human-readable explanation specific to this occurrence of the problem.",
            "examples": ["Property foo is required but is missing."],
            "type": "string"
          },
          "errors": {
            "description": "Optional list of individual error details",
            "items": { "$ref": "#/components/schemas/ErrorDetail" },
            "type": "array"
          },
          "instance": {
            "description": "A URI reference that identifies the specific occurrence of the problem.",
            "examples": ["https://example.com/error-log/abc123"],
            "format": "uri",
            "type": "string"
          },
          "status": {
            "description": "HTTP status code",
            "examples": [400],
            "format": "int64",
            "type": "integer"
          },
          "title": {
            "description": "A short, human-readable summary of the problem type. This value should not change between occurrences of the error.",
            "examples": ["Bad Request"],
            "type": "string"
          },
          "type": {
            "default": "about:blank",
            "description": "A URI reference to human-readable documentation for the error.",
            "examples": ["https://example.com/errors/example"],
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetMetaWithMagnetReqBody": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "http://localhost:9999/api/schemas/GetMetaWithMagnetReqBody.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "magnet": { "minLength": 1, "type": "string" }
        },
        "required": ["magnet"],
        "type": "object"
      },
      "GetTorrentsResBody": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "http://localhost:9999/api/schemas/GetTorrentsResBody.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "torrents": {
            "items": { "$ref": "#/components/schemas/Torrent" },
            "type": "array"
          }
        },
        "required": ["torrents"],
        "type": "object"
      },
      "Item": {
        "additionalProperties": false,
        "properties": {
          "name": { "type": "string" },
          "path": { "type": "string" },
          "priority": {
            "enum": ["None", "Low", "Normal", "High", "Maximum"],
            "type": "string"
          }
        },
        "required": ["path", "name", "priority"],
        "type": "object"
      },
      "Peer": {
        "additionalProperties": false,
        "properties": {
          "ip": { "format": "ipv4", "type": "string" },
          "ipPort": { "format": "int32", "type": "integer" },
          "url": { "$ref": "#/components/schemas/URL" }
        },
        "required": ["url", "ip", "ipPort"],
        "type": "object"
      },
      "PeerInfo": {
        "additionalProperties": false,
        "properties": {
          "Addr": {},
          "Id": { "contentEncoding": "base64", "type": "string" },
          "Source": { "type": "string" },
          "SupportsEncryption": { "type": "boolean" },
          "Trusted": { "type": "boolean" }
        },
        "required": ["Id", "Addr", "Source", "SupportsEncryption", "Trusted"],
        "type": "object"
      },
      "PieceProgress": {
        "additionalProperties": false,
        "properties": {
          "downloadedByteCount": { "format": "int64", "type": "integer" },
          "index": { "format": "int64", "type": "integer" },
          "length": { "format": "int64", "type": "integer" }
        },
        "required": ["index", "downloadedByteCount", "length"],
        "type": "object"
      },
      "Torrent": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": ["http://localhost:9999/api/schemas/Torrent.json"],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "amountLeft": { "format": "int64", "type": "integer" },
          "availability": { "format": "float", "type": "number" },
          "category": { "type": "string" },
          "comment": { "type": "string" },
          "createdAt": { "format": "int64", "type": "integer" },
          "downloadSpeed": { "format": "float", "type": "number" },
          "downloaded": { "format": "int64", "type": "integer" },
          "eta": { "format": "int64", "type": "integer" },
          "files": {
            "items": { "$ref": "#/components/schemas/TorrentFile" },
            "type": "array"
          },
          "infohash": { "type": "string" },
          "magnet": { "type": "string" },
          "name": { "type": "string" },
          "peerCount": { "format": "int64", "type": "integer" },
          "peers": {
            "additionalProperties": { "$ref": "#/components/schemas/PeerInfo" },
            "type": "object"
          },
          "pieceProgress": {
            "items": { "$ref": "#/components/schemas/PieceProgress" },
            "type": "array"
          },
          "progress": { "format": "float", "type": "number" },
          "ratio": { "format": "float", "type": "number" },
          "savePath": { "type": "string" },
          "seeds": { "format": "int64", "type": "integer" },
          "startedAt": { "format": "int64", "type": "integer" },
          "status": { "format": "int64", "type": "integer" },
          "tags": { "items": { "type": "string" }, "type": "array" },
          "timeActive": { "format": "int64", "type": "integer" },
          "totalSize": { "format": "int64", "type": "integer" },
          "trackers": {
            "items": { "$ref": "#/components/schemas/Tracker" },
            "type": "array"
          },
          "uploadSpeed": { "format": "int64", "type": "integer" },
          "uploaded": { "format": "int64", "type": "integer" }
        },
        "required": [
          "name",
          "infohash",
          "files",
          "totalSize",
          "amountLeft",
          "uploaded",
          "downloaded",
          "magnet",
          "status",
          "pieceProgress",
          "peers",
          "progress",
          "peerCount",
          "eta",
          "category",
          "savePath",
          "tags",
          "trackers",
          "createdAt",
          "startedAt",
          "timeActive",
          "availability",
          "ratio",
          "seeds",
          "downloadSpeed",
          "uploadSpeed",
          "comment"
        ],
        "type": "object"
      },
      "TorrentActionReqBody": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "http://localhost:9999/api/schemas/TorrentActionReqBody.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "infoHashes": {
            "description": "Hashes of torrents",
            "examples": [["2b66980093bc11806fab50cb3cb41835b95a0362"]],
            "items": { "type": "string" },
            "maxLength": 30,
            "type": "array"
          }
        },
        "required": ["infoHashes"],
        "type": "object"
      },
      "TorrentActionResBody": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "http://localhost:9999/api/schemas/TorrentActionResBody.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "result": { "type": "boolean" }
        },
        "required": ["result"],
        "type": "object"
      },
      "TorrentFile": {
        "additionalProperties": false,
        "properties": {
          "children": {
            "items": { "$ref": "#/components/schemas/TorrentFile" },
            "type": "array"
          },
          "length": { "format": "int64", "type": "integer" },
          "name": { "type": "string" },
          "path": { "type": "string" },
          "priority": { "format": "int32", "type": "integer" }
        },
        "required": ["length", "name", "priority", "path", "children"],
        "type": "object"
      },
      "TorrentMeta": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": ["http://localhost:9999/api/schemas/TorrentMeta.json"],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "files": {
            "items": { "$ref": "#/components/schemas/TorrentFile" },
            "type": "array"
          },
          "infohash": { "type": "string" },
          "magnet": { "type": "string" },
          "name": { "type": "string" },
          "totalSize": { "format": "int64", "type": "integer" }
        },
        "required": ["totalSize", "files", "name", "infohash", "magnet"],
        "type": "object"
      },
      "Tracker": {
        "additionalProperties": false,
        "properties": {
          "interval": { "format": "int64", "type": "integer" },
          "peers": {
            "items": { "$ref": "#/components/schemas/Peer" },
            "type": "array"
          },
          "tier": { "format": "int64", "type": "integer" },
          "url": { "type": "string" }
        },
        "required": ["interval", "url", "peers", "tier"],
        "type": "object"
      },
      "URL": { "format": "uri", "type": "string" }
    }
  },
  "info": { "title": "Downite API", "version": "0.0.1" },
  "openapi": "3.1.0",
  "paths": {
    "/meta/file": {
      "post": {
        "operationId": "post-meta-file",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "filename": {
                    "description": "filename of the file being uploaded",
                    "format": "binary",
                    "type": "string"
                  },
                  "name": {
                    "description": "general purpose name for multipart form value",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TorrentMeta" }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Post meta file"
      }
    },
    "/meta/magnet": {
      "post": {
        "operationId": "post-meta-magnet",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetMetaWithMagnetReqBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TorrentMeta" }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Post meta magnet"
      }
    },
    "/torrent": {
      "get": {
        "operationId": "get-all-torrents",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetTorrentsResBody" }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Get all torrents"
      },
      "post": {
        "operationId": "post-torrent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DownloadTorrentReqBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Torrent" }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Post torrent"
      }
    },
    "/torrent/:hash": {
      "get": {
        "operationId": "get-torrent-hash",
        "parameters": [
          {
            "example": "2b66980093bc11806fab50cb3cb41835b95a0362",
            "in": "path",
            "name": "hash",
            "required": true,
            "schema": {
              "description": "Hash of the torrent",
              "examples": ["2b66980093bc11806fab50cb3cb41835b95a0362"],
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Torrent" }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Get torrent hash"
      }
    },
    "/torrent/pause": {
      "post": {
        "operationId": "post-torrent-pause",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TorrentActionReqBody" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TorrentActionResBody"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Post torrent pause"
      }
    },
    "/torrent/remove": {
      "post": {
        "operationId": "post-torrent-remove",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TorrentActionReqBody" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TorrentActionResBody"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Post torrent remove"
      }
    },
    "/torrent/resume": {
      "post": {
        "operationId": "post-torrent-resume",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TorrentActionReqBody" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TorrentActionResBody"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Post torrent resume"
      }
    }
  },
  "servers": [{ "url": "http://localhost:9999/api" }]
}
